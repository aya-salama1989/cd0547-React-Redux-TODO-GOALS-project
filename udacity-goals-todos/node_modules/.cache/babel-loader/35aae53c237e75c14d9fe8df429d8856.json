{"ast":null,"code":"import { RECEIVE_DATA } from \"../actions/shared\";\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from \"../actions/todos\";\nexport default function todos() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat([action.todo]);\n\n    case REMOVE_TODO:\n      return state.filter(todo => todo.id !== action.id);\n\n    case TOGGLE_TODO:\n      return state.map(todo => todo.id !== action.id ? todo : Object.assign({}, todo, {\n        complete: !todo.complete\n      }));\n\n    case RECEIVE_DATA:\n      return action.todos;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ayasalama/ReactNative/cd0547-React-Redux-TODO-GOALS-project/udacity-goals-todos/src/reducers/todos.js"],"names":["RECEIVE_DATA","ADD_TODO","REMOVE_TODO","TOGGLE_TODO","todos","state","action","type","concat","todo","filter","id","map","Object","assign","complete"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,kBAAnD;AAEA,eAAe,SAASC,KAAT,GAAmC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AACE,aAAOI,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,IAAR,CAAb,CAAP;;AACF,SAAKP,WAAL;AACE,aAAOG,KAAK,CAACK,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACK,EAA1C,CAAP;;AACF,SAAKR,WAAL;AACE,aAAOE,KAAK,CAACO,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACK,EAAnB,GACIF,IADJ,GAEII,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,IAAlB,EAAwB;AAAEM,QAAAA,QAAQ,EAAE,CAACN,IAAI,CAACM;AAAlB,OAAxB,CAHC,CAAP;;AAKF,SAAKf,YAAL;AACE,aAAOM,MAAM,CAACF,KAAd;;AACF;AACE,aAAOC,KAAP;AAdJ;AAgBD","sourcesContent":["import { RECEIVE_DATA } from \"../actions/shared\";\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from \"../actions/todos\";\n\nexport default function todos(state = [], action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat([action.todo]);\n    case REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.id);\n    case TOGGLE_TODO:\n      return state.map((todo) =>\n        todo.id !== action.id\n          ? todo\n          : Object.assign({}, todo, { complete: !todo.complete })\n      );\n    case RECEIVE_DATA:\n      return action.todos;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}